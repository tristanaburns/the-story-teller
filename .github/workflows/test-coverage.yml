name: Test Coverage

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    name: Test Coverage
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests with coverage
        run: npm run test:ci
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
      
      - name: Check coverage threshold
        run: |
          COVERAGE_OUTPUT=$(cat coverage/coverage-summary.json)
          STATEMENTS=$(echo $COVERAGE_OUTPUT | jq -r '.total.statements.pct')
          BRANCHES=$(echo $COVERAGE_OUTPUT | jq -r '.total.branches.pct')
          FUNCTIONS=$(echo $COVERAGE_OUTPUT | jq -r '.total.functions.pct')
          LINES=$(echo $COVERAGE_OUTPUT | jq -r '.total.lines.pct')
          
          echo "Statements coverage: $STATEMENTS%"
          echo "Branches coverage: $BRANCHES%"
          echo "Functions coverage: $FUNCTIONS%"
          echo "Lines coverage: $LINES%"
          
          THRESHOLD=90
          
          if (( $(echo "$STATEMENTS < $THRESHOLD" | bc -l) )) || \
             (( $(echo "$BRANCHES < $THRESHOLD" | bc -l) )) || \
             (( $(echo "$FUNCTIONS < $THRESHOLD" | bc -l) )) || \
             (( $(echo "$LINES < $THRESHOLD" | bc -l) )); then
            echo "Coverage is below required threshold of $THRESHOLD%"
            exit 1
          else
            echo "Coverage meets or exceeds threshold of $THRESHOLD%"
          fi
      
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage
          retention-days: 7
